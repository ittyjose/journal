version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.8.0
  aws-eks: circleci/aws-eks@0.2.6

jobs:
  build:
    parallelism: 1
    docker:
       - image: circleci/ruby:2.7.0-node-browsers
       - image: circleci/postgres:11.2
    working_directory: ~/journal
    environment:
      TZ: "/usr/share/zoneinfo/America/New_York"
      RAILS_ENV: "test"
      RACK_ENV: "test"

    steps:

      - checkout

      # Download cache dependencies
      - restore_cache:
          keys:
          - gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          - gem-cache-{{ checksum "Gemfile.lock" }}
          - gem-cache

      - restore_cache:
          keys:
          - journal-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          - journal-yarn-deps-{{ .Branch }}
          - journal-yarn-deps

      # Bundle install
      - run: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3

      # Store bundle cache
      - save_cache:
          key: gem-cache-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: gem-cache-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - save_cache:
          key: gem-cache
          paths:
            - vendor/bundle

      # Bundler audit
      - run:
          shell: /bin/bash
          command: bundle exec bundle-audit check --update

      # Setup database
      - run: cp config/database.yml.ci config/database.yml
      - run: bundle exec rake db:create db:schema:load --trace

      # Yarn install
      - run: bin/yarn install --cache-folder vendor/node_modules

      # Store yarn cache
      - save_cache:
          key: journal-yarn-deps-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - vendor/node_modules
      - save_cache:
          key: journal-yarn-deps-{{ .Branch }}
          paths:
            - vendor/node_modules
      - save_cache:
          key: journal-yarn-deps
          paths:
            - vendor/node_modules

      # Generate assets
      - run: bin/webpack
      - run: bundle exec rails webpacker:compile

      # Unit tests
      - run:
          shell: /bin/bash
          command: bundle exec rake test --trace
workflows:
  version: 2.1
  commit:
    jobs:
      - build
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - build
  deploy-to-production:
    jobs:
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
          repo: "${ECR_REPO_NAME}"
          tag: "${CIRCLE_SHA1},latest"
          filters:
            branches:
              only: production
      - aws-eks/update-container-image:
          cluster-name: "${EKS_CLUSTER_NAME}"
          aws-region: "${AWS_DEFAULT_REGION}"
          container-image-updates: '${EKS_CONTAINER_NAME}=${AWS_ECR_ACCOUNT_URL}/${ECR_REPO_NAME}:${CIRCLE_SHA1}'
          resource-name: "${EKS_RESOURCE_NAME}"
          requires:
            - aws-ecr/build-and-push-image
